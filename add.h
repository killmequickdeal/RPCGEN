/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ADD_H_RPCGEN
#define _ADD_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


typedef struct {
	u_int int_ptr_len;
	int *int_ptr_val;
} int_ptr;

struct Matrix {
	int_ptr matrix;
	int size1;
	int size2;
};
typedef struct Matrix Matrix;

struct matrixmultiply_1_argument {
	Matrix arg1;
	Matrix arg2;
};
typedef struct matrixmultiply_1_argument matrixmultiply_1_argument;

#define ADD_PROG 0x30071315
#define ADDS_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DateAndTime 1
extern  enum clnt_stat dateandtime_1(char **, CLIENT *);
extern  bool_t dateandtime_1_svc(char **, struct svc_req *);
#define Sort 2
extern  enum clnt_stat sort_1(int_ptr , int_ptr *, CLIENT *);
extern  bool_t sort_1_svc(int_ptr , int_ptr *, struct svc_req *);
#define List 3
extern  enum clnt_stat list_1(char **, CLIENT *);
extern  bool_t list_1_svc(char **, struct svc_req *);
#define MatrixMultiply 4
extern  enum clnt_stat matrixmultiply_1(Matrix , Matrix , Matrix *, CLIENT *);
extern  bool_t matrixmultiply_1_svc(Matrix , Matrix , Matrix *, struct svc_req *);
#define ReverseEncryptedEcho 5
extern  enum clnt_stat reverseencryptedecho_1(char *, char **, CLIENT *);
extern  bool_t reverseencryptedecho_1_svc(char *, char **, struct svc_req *);
extern int add_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DateAndTime 1
extern  enum clnt_stat dateandtime_1();
extern  bool_t dateandtime_1_svc();
#define Sort 2
extern  enum clnt_stat sort_1();
extern  bool_t sort_1_svc();
#define List 3
extern  enum clnt_stat list_1();
extern  bool_t list_1_svc();
#define MatrixMultiply 4
extern  enum clnt_stat matrixmultiply_1();
extern  bool_t matrixmultiply_1_svc();
#define ReverseEncryptedEcho 5
extern  enum clnt_stat reverseencryptedecho_1();
extern  bool_t reverseencryptedecho_1_svc();
extern int add_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_int_ptr (XDR *, int_ptr*);
extern  bool_t xdr_Matrix (XDR *, Matrix*);
extern  bool_t xdr_matrixmultiply_1_argument (XDR *, matrixmultiply_1_argument*);

#else /* K&R C */
extern bool_t xdr_int_ptr ();
extern bool_t xdr_Matrix ();
extern bool_t xdr_matrixmultiply_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ADD_H_RPCGEN */
